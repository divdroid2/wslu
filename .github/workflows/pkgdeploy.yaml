name: Package Deployment
on:
  push:
    branches:
      - master
jobs:
  debbuild:
    name: Debian
    runs-on: ubuntu-18.04
    steps:
      - uses: actions/checkout@v2
      - name: Install Pre-requisites
        run: |
          sudo apt-get update -qq
          sudo apt-get install -qq apt-utils build-essential gzip devscripts debhelper
      - name: Build Debian Package
        run: |
          bash ./configure.sh --deb buster
          debuild -i -us -uc -b
          mkdir -p ./pkgs
          mv ../wsl*.* ./pkgs
      - uses: actions/upload-artifact@v1
        with:
          name: Debian10DEBs
          path: pkgs
  pgwbuild:
    name: Pengwin
    runs-on: ubuntu-18.04
    steps:
      - uses: actions/checkout@v2
      - name: Install Pre-requisites
        run: |
          sudo apt-get update -qq
          sudo apt-get install -qq apt-utils build-essential gzip devscripts debhelper
      - name: Build Debian Package
        run: |
          bash ./configure.sh --deb bullseye
          debuild -i -us -uc -b
          mkdir -p ./pkgs
          mv ../wsl*.* ./pkgs
      - uses: actions/upload-artifact@v1
        with:
          name: PengwinDEBs
          path: pkgs
  pgwspdeploy:
    name: Pengwin Deploying
    needs: pgwbuild
    runs-on: ubuntu-18.04
    container: circleci/ruby:2.3-jessie
    steps:
      - name: Retrive package for deployment
        uses: actions/download-artifact@v4.1.7
        with:
          name: PengwinDEBs
      - run: gem install package_cloud
      - name: deploy to the dev
        env:
          PACKAGECLOUD_TOKEN: ${{ secrets.PGW_DEV_DEPLOY_KEY }}
        run: package_cloud push whitewaterfoundry/wslu/debian/bullseye ./PengwinDEBs/*.deb --skip-errors
  rpmobsbuild:
    name: RPM - OpenSUSE Build Service
    runs-on: ubuntu-18.04
    steps:
      - uses: actions/checkout@v2
      - name: Install Pre-requisites
        run: |
          sudo apt-get update -qq
          sudo apt-get install -qq build-essential tar
      - name: configure
        run: |
          bash ./configure.sh --rpm
          cp extras/build/rpm/obs/wslu.spec ../wslu.spec
          rm -rf *
          mkdir -p SOURCES
          mkdir -p SPECS
          cp ../wslu-*.tar.gz SOURCES
          cp ../wslu.spec SPECS
      - name: rpmbuild
        uses: ./.github/actions/rpmbuild/
      - name: moving files
        run: |
          mkdir compiled_rpms
          cp SRPMS/* compiled_rpms
          cp RPMS/noarch/* compiled_rpms
        #uses: robertdebock/rpmbuild-action@1.1.1
      - uses: actions/upload-artifact@v1
        with:
          name: OBSRPMs
          path: compiled_rpms
  rpmcoprbuild:
    name: RPM - COPR
    runs-on: ubuntu-18.04
    steps:
      - uses: actions/checkout@v2
      - name: Install Pre-requisites
        run: |
          sudo apt-get update -qq
          sudo apt-get install -qq build-essential tar
      - name: configure
        run: |
          bash ./configure.sh --rpm
          cp extras/build/rpm/copr/wslu.spec ../wslu.spec
          rm -rf *
          mkdir -p SOURCES
          mkdir -p SPECS
          cp ../wslu-*.tar.gz SOURCES
          cp ../wslu.spec SPECS
      - name: rpmbuild
        uses: ./.github/actions/rpmbuild/
      - name: moving files
        run: |
          mkdir compiled_rpms
          cp SRPMS/* compiled_rpms
          cp RPMS/noarch/* compiled_rpms
        #uses: robertdebock/rpmbuild-action@1.1.1
      - uses: actions/upload-artifact@v1
        with:
          name: COPRRPMs
          path: compiled_rpms
      # - name: deploy RPM source to rpm-wslu
      #   env:
      #     GH_TOKEN: ${{ secrets.GIT_DEPLOY_KEY }}
      #   run: |
      #     git config --global user.email "me@patrickwu.space"
      #     git config --global user.name "Jinming Wu, Patrick"
      #     git clone --depth 1 https://patrick330602:$GH_TOKEN@github.com/wslutilities/rpm-wslu.git rpm-repo
      #     git --git-dir=./rpm-repo/.git --work-tree=./rpm-repo add -A
      #     git --git-dir=./rpm-repo/.git --work-tree=./rpm-repo commit -m "RPM Packaging file update: $(date)"
      #     git --git-dir=./rpm-repo/.git --work-tree=./rpm-repo push
